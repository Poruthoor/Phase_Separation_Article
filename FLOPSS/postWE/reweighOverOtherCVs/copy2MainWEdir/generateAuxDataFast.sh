#! /bin/bash
############################################################
# Help                                                     #
############################################################
Help()
{
   # Display Help
   echo ""
   echo "Executes the input auxillary CV script over iterations defined by
the input arguments. Creates a fake WE simulation dir containing a duplciate
west.h5 file and traj_dir needed for the subsequent python script in this
pipeline which include the data generated by this script into the duplicate
west.h5 file"
   echo
   echo "Usage: bash generateAuxDataFast.sh [-h|a|f|l|v]"
   echo "Example: bash generateAuxDataFast.sh -a auxList.txt -f 490 -l 500"
   echo "options:"
   echo "h     Display help."
   echo "a     Path to the file that conatins the list of script files to be
      called by this script to execute the respective Aux CV calc."
   echo "f     First iteration from which the Aux CV will be calculated."
   echo "l     Last iteration till which the Aux CV will be calculated."
   echo "v     Verbose mode."
   echo
}

############################################################
############################################################
# Input Arguments                                          #
############################################################
############################################################

while getopts a:f:l:hv flag
do
    case "${flag}" in
        a) auxList=${OPTARG};;
        f) firstIter=${OPTARG};;
        l) lastIter=${OPTARG};;
        v) [[ $_V -eq 1 ]] && echo "verbose mode on";;
        h) # Display Help
            Help
            exit;;
        \?) # Invalid option
            echo "Error: Invalid option"
            Help
            exit;;
    esac
done

# No arguments?
if [[ $# -eq 0 ]] ; then
    echo ""
    echo "Inputs needed !!"
    Help
    exit 0
fi

echo ""
echo "File chosen for calculating additional CV: $auxList";
echo "Starting iteration: $firstIter";
echo "Ending iteration: $lastIter";

############################################################
############################################################
# Main Program                                             #
############################################################
############################################################

CURRENT=$PWD
model=${CURRENT}/bstates/model.psf
lipidList=${CURRENT}/common_files/lipidList.dat
rFile=${CURRENT}/common_files/avgRcutoff.dat


for iter in $(seq $firstIter $lastIter)
do
    iteration=$(printf "%06d" $iter)
    echo "Analysing iteration : $iteration"

    for dir in ${CURRENT}/traj_segs/${iteration}/*/
    do
        segID=$(basename -- $dir)
        fileName=$segID
        traj=${dir}seg.xtc

        mkdir -p ${CURRENT}/fakeWEfolder/${segID}
        cd ${CURRENT}/fakeWEfolder/${segID}

        sed '/CHOL/d' $lipidList > lipidList_NoCHOL.dat
        sed '/CHOL/d' $rFile > rFile_NoCHOL.dat

        # Post processing the trajectory - reimaging and centering using LOOS 
        subsetter -C 'resname =~ "PC" || resname == "CHOL"' \
            --reimage=extreme traj $model $traj

        cd $CURRENT

        echo "Analysing segment : ${segID}"

        #######################################################################
        #######################################################################
        # This were the external CV scripts are called from the list. We are  #
        # calling each script one after another so that LOOS subsetter need to#
        # be used once per each segment and not per each analysis.            #
        # There's a hardcording aspect here: The script that needs no CHOL in #
        # the analysis is assumed to be named with a keyword "WithoutCHOL" so #
        # that a corresponding lipid List file without CHOL can be made from  #
        # exisitng one.                                                       #
        #######################################################################


        while read auxCommand
        do
            auxName="${auxCommand%.*}"

            mkdir -p ${CURRENT}/fakeWEfolder/${auxName}/${iteration}/
            cd ${CURRENT}/fakeWEfolder/${auxName}/${iteration}/

            if [[ ${auxName} == *"WithoutCHOL"* ]]
            then
                bash ${CURRENT}/${auxCommand} \
                    -t ${CURRENT}/fakeWEfolder/${segID}/traj.dcd \
                    -f $fileName \
                    -m $model \
                    -r ${CURRENT}/fakeWEfolder/${segID}/rFile_NoCHOL.dat \
                    -l ${CURRENT}/fakeWEfolder/${segID}/lipidList_NoCHOL.dat

            elif [[ ${auxName} == *"DBSCAN_fixed_min"* ]]
            then
                rFile=${CURRENT}/common_files/min_avgRcutoff.dat
                bash ${CURRENT}/pcoord.sh \
                    -t ${CURRENT}/fakeWEfolder/${segID}/traj.dcd \
                    -f $fileName \
                    -m $model \
                    -r $rFile \
                    -l $lipidList

            elif [[ ${auxName} == *"DBSCAN_fixed_max"* ]]
            then
                rFile=${CURRENT}/common_files/max_avgRcutoff.dat
                bash ${CURRENT}/pcoord.sh \
                    -t ${CURRENT}/fakeWEfolder/${segID}/traj.dcd \
                    -f $fileName \
                    -m $model \
                    -r $rFile \
                    -l $lipidList

            else
                bash ${CURRENT}/${auxCommand} \
                    -t ${CURRENT}/fakeWEfolder/${segID}/traj.dcd \
                    -f $fileName \
                    -m $model \
                    -r $rFile \
                    -l $lipidList
            fi

            cd $CURRENT

        done < $auxList

        #######################################################################
        #######################################################################

        rm -rf ${CURRENT}/fakeWEfolder/${segID}

    done

done

# Copy westpa file from main WE dir to fake
cp -prf west.h5 fakeWEfolder/westAux.h5
