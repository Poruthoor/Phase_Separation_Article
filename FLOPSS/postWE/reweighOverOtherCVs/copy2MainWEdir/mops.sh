#! /bin/bash

############################################################
# Help                                                     #
############################################################
Help()
{
   # Display Help
   echo ""
   echo "Executes the auxillary CV script on the trajectory provided and
   returns the data into a file with given filename"
   echo
   echo "Usage: bash generateAuxData.sh [-h|t|f|p]"
   echo "options:"
   echo "-h     Display help."
   echo "-t     Path to the traj"
   echo "-f     File name."
   echo "-m     model file (.psf) path."
   echo "-r     radius cutoff File path."
   echo "-l     lipid List File path."
   echo
}

############################################################
############################################################
# Input Arguments                                          #
############################################################
############################################################

while getopts :t:f:m:r:l:h flag
do
    case "${flag}" in
        t) traj=${OPTARG};;
        f) fileName=${OPTARG};;
        m) model=${OPTARG};;
        r) rFile=${OPTARG};;
        l) lipidList=${OPTARG};;
        h) # Display Help
            Help
            exit;;
        \?) # Invalid option
            echo "Error: Invalid option"
            Help
            exit;;
    esac
done

# No arguments?
if [[ $# -eq 0 ]] ; then
    echo ""
    echo "Inputs needed !!"
    Help
    exit 0
fi

while IFS= read -r lipid;
do

    TEMP_SYSTEM=$(mktemp)

    if [ -s $traj ] && [ -s $model ]
    then

        mops "resname == '"$lipid"'"  --timeseries 1 $model $traj > $TEMP_SYSTEM || exit 1

        # Prints the average value of mops from the output file generated by
        # mops tool, into output files for respective lipids in the list
        cat $TEMP_SYSTEM | awk '/^[^#]/ { print $3 }' > ${fileName}_${lipid}.dat
        
    fi
done < ${lipidList}
